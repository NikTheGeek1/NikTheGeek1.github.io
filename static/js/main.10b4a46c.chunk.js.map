{"version":3,"sources":["threeD/Lights.tsx","threeD/animations/monkey/MonkeyInitialAnimation.tsx","threeD/animations/monkey/MonkeyTopRightAnimation.tsx","threeD/animations/monkey/AnimationFunctions.tsx","threeD/Monkey.tsx","threeD/animations/siders/MovingBackAnimation.tsx","threeD/animations/siders/AnimationFunctions.tsx","threeD/Siders.tsx","threeD/Wall.tsx","threeD/Main.tsx","components/ThreeD/ThreeD.tsx","components/Headings/PrimaryHeading/PrimaryHeading.tsx","components/Headings/SecondaryHeading/SecondaryHeading.tsx","components/Headings/TertiaryHeading/TertiaryHeading.tsx","components/BoxTitle/BoxTitle.tsx","components/Timeline/Timeline.tsx","enums/paths.tsx","components/About/About.tsx","components/ProfileBody/ProfileBody.tsx","assets/images/profile.jpeg","components/ProfileHeader/ProfileHeader.tsx","containers/Profile/Profile.tsx","containers/LandingPage/LandingPage.tsx","hooks-store/store.tsx","hooks-store/stores/current-page.tsx","App.tsx","utils/visitor-tracker.tsx","index.tsx"],"names":["Lights","main","monkeyLightAtStartOfTheAnimation","monkeyLight","wallLight","monkeyHelper","wallHelper","this","THREE","Math","PI","position","set","targetObject","scene","add","target","createMonkeyLight","createMonkeyLightAtStartOfTheAnimation","createWallLight","update","color","getHex","setHex","MonkeyAnimation","initialY","initialZ","finalY","finalZ","coords","currentFrame","animationFinished","results","y","z","length","AnimationFunctions","currentAnimation","undefined","MonkeyTopRightAnimation","initialX","finalX","coordsArray","onEndCb","monkeyAnimation","setCoords","moveInFromBack","monkeyTopRightAnimation","goToTopAndBack","zIncrement","i","parabolicFunc","abs","x","yStart","p1","p2","flattenFunc","exp","Monkey","monkey","monkeyLoaded","raycaster","intersects","pickableObjects","onClickEventListenerRef","shouldRaycast","Array","MTLLoader","load","materials","preload","objLoader","OBJLoader","setMaterials","object","traverse","child","isMesh","setMonkey","material","xhr","console","log","loaded","total","error","monkeyConfig","e","clientX","renderer","domElement","clientWidth","clientY","clientHeight","rotation","setFromCamera","camera","intersectObjects","document","getElementsByTagName","style","cursor","Animations","instantiateMonkeyTopRightAnimation","sidersInstance","sidersAnimation","shouldAnimate","monkeyClickedSetter","instantiateMonkeyAnimation","lightsInstance","removeEventListener","currentCoords","getNextFrame","removeOnClickListener","bind","loadMonkey","createRaycaster","onClick","addEventListener","onMouseMove","MovingBackAnimation","goToBack","yIncrement","Siders","leftKnot","rightKnot","leftKnotProps","rightKnotProps","lastUpdateTime","radiusCurrValue","radius","tube","tubularSegments","radialSegments","p","q","Date","getTime","newLeftGeometry","geometry","dispose","newRightGeometry","start","range","step","curr","regenerateKnotGeometries","SidersAnimation","createMaterial","createLeftKnot","createRightKnot","instantiateMovingBackAnimation","Wall","wall","createWall","Main","canvas","stats","monkeyInstance","wallInstance","background","window","innerWidth","innerHeight","setSize","Stats","body","appendChild","dom","init","windowMaxHeight","aspect","updateProjectionMatrix","render","requestAnimationFrame","animationLoop","updateHelpers","updateKnots","changeLightColours","animateMonkey","animateKnots","createRenderer","createCamera","createScene","createStats","createMonkeyInstance","createLightsInstance","createSidersInstance","createWallInstance","onWindowResize","ThreeD","setMonkeyClicked","useState","setWebGLMainInstance","canvasRef","createRef","useEffect","current","webGLMainInstance","ref","className","PrimaryHeading","content","SecondaryHeading","TertiaryHeading","BoxTile","title","Timeline","pathsEnum","TIMELINE","ABOUT","EXPERIENCE","CONTACT","PROJECTS","About","ProfileBody","exact","path","to","ProfileHeader","history","useHistory","setRefreshTab","headerItemsJSX","map","item","activeItemClass","location","pathname","slice","toLowerCase","event","toUpperCase","push","itemClickHandler","src","profileImg","Profile","LandingPage","monkeyClicked","exitingAnimationFinished","setExitingAnimationFinished","landingPageClass","setLandingPageClass","animationTimer","setTimeout","clearTimeout","exitingClasses","primaryHeading","secondaryHeading","globalState","actions","PAGES_ENUM","userActions","initialState","curState","currentPage","playerChoiseStore","App","fetch","then","res","text","visitorData","method","headers","JSON","stringify","date","visitorTracker","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10b4a46c.chunk.js","sourcesContent":["import * as THREE from 'three/build/three.module';\nimport Main from './Main';\n\nclass Lights {\n\n    private main: Main;\n    public monkeyLightAtStartOfTheAnimation!: THREE.SpotLight;\n    public monkeyLight!: THREE.SpotLight;\n    public wallLight!: THREE.DirectionalLight;\n    private monkeyHelper!: THREE.SpotLightHelper;\n    private wallHelper!: THREE.DirectionalLightHelper;\n\n\n    constructor(main: Main) {\n        this.main = main;\n    }\n\n    private createMonkeyLightAtStartOfTheAnimation(): void {\n        this.monkeyLightAtStartOfTheAnimation = new THREE.SpotLight(0x00ff00, 10, 30, Math.PI / 10, .4, 1);\n        this.monkeyLightAtStartOfTheAnimation.position.set(0, 10, 0);\n        const targetObject = new THREE.Object3D();\n        targetObject.position.set(0, 0, -20);\n        this.main.scene.add(targetObject);\n        this.monkeyLightAtStartOfTheAnimation.target = targetObject;\n        this.main.scene.add(this.monkeyLightAtStartOfTheAnimation);\n        \n\n        const helper = new THREE.SpotLightHelper(this.monkeyLightAtStartOfTheAnimation);\n        // this.main.scene.add(helper);\n    }\n\n    private createMonkeyLight(): void {\n        this.monkeyLight = new THREE.SpotLight(\"white\", 10, 12, Math.PI / 10 , .4, 1);\n        this.monkeyLight.position.set(2.5, 5.5, 7)\n        this.main.scene.add(this.monkeyLight);\n\n        this.monkeyHelper = new THREE.SpotLightHelper(this.monkeyLight);\n        // this.main.scene.add(this.monkeyHelper);\n    }\n\n    private createWallLight(): void {\n        this.wallLight = new THREE.DirectionalLight(\"white\", 0.03);\n        const targetObject = new THREE.Object3D();\n        targetObject.position.set(0, 0, -40);\n        this.wallLight.target = targetObject;\n        this.main.scene.add(targetObject);\n        this.wallLight.position.set(0, 0, -30);\n        this.main.scene.add(this.wallLight);\n        \n        this.wallHelper = new THREE.DirectionalLightHelper(this.wallLight);\n        // this.main.scene.add(this.wallHelper);\n    }\n\n    public init():void {\n        this.createMonkeyLight();\n        this.createMonkeyLightAtStartOfTheAnimation();\n        this.createWallLight();\n    }\n\n    public updateHelpers():void {\n        this.monkeyHelper.update()    \n    }\n\n    public changeLightColours(): void {\n        const color = (this.monkeyLight.color.getHex() + 1000) % 1000000;\n        this.monkeyLight.color.setHex(color);\n        this.wallLight.color.setHex(color);\n    }\n\n\n}\n\nexport default Lights;","import AnimationFunctions from \"./AnimationFunctions\";\n\nclass MonkeyAnimation {\n\n    public initialY: number;\n    public initialZ: number;\n    public finalY: number;\n    public finalZ: number;\n    public coords!: { y: number[], z: number[] };\n    private currentFrame: number;\n    public animationFinished: boolean;\n\n    constructor() {\n        this.initialY = -2;\n        this.initialZ = -20;\n        this.finalY = 2;\n        this.finalZ = 0;\n        this.currentFrame = 0;\n        this.animationFinished = false;\n    }\n\n    public setCoords(coords: { y: number[], z: number[] }): void {\n        this.coords = coords;\n    }\n\n    public getNextFrame(): { y: number, z: number } {\n        const results = { y: this.coords.y[this.currentFrame], z: this.coords.z[this.currentFrame] };\n        this.currentFrame++;\n        if (this.currentFrame > (this.coords.y.length - 1)) {\n            this.animationFinished = true;\n            this.finalY = this.coords.y[this.currentFrame-1];\n            this.finalZ = this.coords.z[this.currentFrame-1];\n            AnimationFunctions.currentAnimation = undefined;\n        }\n        return results;\n    }\n\n\n}\n\nexport default MonkeyAnimation;","import AnimationFunctions from \"./AnimationFunctions\";\n\n\nclass MonkeyTopRightAnimation {\n\n    private initialX: number;\n    private initialY: number;\n    private initialZ: number;\n    private finalZ!: number;\n    private finalY!: number;\n    private finalX!: number;\n    private currentFrame: number;\n    private coordsArray!: { y: number[], z: number[] };\n    public animationFinished: boolean;\n\n    constructor(initialX: number, initialY: number, initialZ: number) {\n        this.initialX = initialX;\n        this.initialY = initialY;\n        this.initialZ = initialZ;\n        this.currentFrame = 0;\n        this.animationFinished = false;\n    }\n\n    public setCoords(coords: { y:number[], z: number[]}) : void{\n        this.coordsArray = coords;\n    }\n\n    public getNextFrame(onEndCb: () => void): { y: number, z: number } {\n        const results = { y: this.coordsArray.y[this.currentFrame], z: this.coordsArray.z[this.currentFrame] };\n        this.currentFrame++;\n        if (this.currentFrame > (this.coordsArray.y.length - 1)) {\n            this.animationFinished = true;\n            this.finalY = this.coordsArray.y[this.currentFrame-1];\n            this.finalZ = this.coordsArray.z[this.currentFrame-1];\n            AnimationFunctions.currentAnimation = undefined;\n            onEndCb();\n        }\n        return results;\n    }\n}\n\nexport default MonkeyTopRightAnimation;","import MonkeyAnimation from './MonkeyInitialAnimation';\nimport MonkeyTopRightAnimation from './MonkeyTopRightAnimation';\n\nclass AnimationFunctions {\n\n    private static monkeyAnimation: MonkeyAnimation;\n    private static monkeyTopRightAnimation: MonkeyTopRightAnimation;\n    public static currentAnimation: MonkeyAnimation | MonkeyTopRightAnimation | undefined;\n\n    public static instantiateMonkeyAnimation(): MonkeyAnimation {\n        if (!this.monkeyAnimation) {\n            this.monkeyAnimation = new MonkeyAnimation();\n        }\n        this.monkeyAnimation.setCoords(\n            this.moveInFromBack(\n                this.monkeyAnimation.initialY, this.monkeyAnimation.initialZ,\n                0.2, 100,\n            )\n        );\n        this.currentAnimation = this.monkeyAnimation;\n        return this.monkeyAnimation;\n    }\n\n    public static instantiateMonkeyTopRightAnimation(initialX: number, initialY: number, initialZ: number): MonkeyTopRightAnimation {\n        if (!this.monkeyTopRightAnimation) {\n            this.monkeyTopRightAnimation = new MonkeyTopRightAnimation(initialX, initialY, initialZ);\n        }\n        this.monkeyTopRightAnimation.setCoords(\n            this.goToTopAndBack(initialZ, initialY, 0.04, 100)\n        );\n        this.currentAnimation = this.monkeyTopRightAnimation;\n        return this.monkeyTopRightAnimation;\n    }\n\n    private static moveInFromBack(\n        initialY: number, initialZ: number,\n        zIncrement: number,\n        length: number\n    ): { y: number[], z: number[] } {\n        const y = [initialY];\n        const z = [initialZ];\n        for (let i = 0; i < length; i++) {\n            z[i + 1] = z[i] + zIncrement;\n            y[i + 1] = this.parabolicFunc(\n                z[i + 1] + Math.abs(initialZ), initialY,\n                1.55, .07\n            )\n        }\n        return { y, z };\n    }\n\n    private static parabolicFunc(x: number, yStart: number, p1: number, p2: number): number {\n        return (p1 * x - p2 * x ** 2) + yStart;\n    }\n\n    private static goToTopAndBack(\n        initialZ: number,\n        initialY: number,\n        zIncrement: number,\n        length: number\n    ): { y: number[], z: number[] } {\n        const y = [initialY];\n        const z = [initialZ];\n        for (let i = 0; i < length; i++) {\n            z[i + 1] = z[i] + zIncrement;\n            y[i + 1] = this.flattenFunc(z[i + 1], -3, -1) + 4;\n        }\n        return { y, z };\n    }\n\n    private static flattenFunc(x: number, p1: number, p2: number): number {\n        return (p1 * Math.exp(p2 * x));\n    }\n}\n\nexport default AnimationFunctions;","import Main from './Main';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three/build/three.module';\nimport Animations from './animations/monkey/AnimationFunctions';\nimport MonkeyAnimation from './animations/monkey/MonkeyInitialAnimation';\nimport MonkeyTopRightAnimation from './animations/monkey/MonkeyTopRightAnimation';\n\nclass Monkey {\n\n    private main: Main;\n    public monkey!: THREE.Mesh;\n    private monkeyLoaded: boolean;\n    private monkeyAnimation!: MonkeyAnimation;\n    private raycaster!: THREE.Raycaster;\n    private intersects: THREE.Intersection[];\n    private pickableObjects!: THREE.Mesh[];\n    private onClickEventListenerRef!: (e: MouseEvent) => void;\n    private shouldRaycast: boolean;\n\n    constructor(main: Main) {\n        this.main = main;\n        this.monkeyLoaded = false;\n        this.intersects = new Array();\n        this.shouldRaycast = true;\n    }\n\n    private createRaycaster(): void {\n        this.raycaster = new THREE.Raycaster();\n    }\n\n\n    private loadMonkey(): void {\n        const loader = new MTLLoader();\n        loader.load(\n            'three-assets/monkey.mtl',\n            (materials) => {\n                materials.preload();\n\n                const objLoader: OBJLoader = new OBJLoader();\n                objLoader.setMaterials(materials);\n                objLoader.load(\n                    'three-assets/monkey.obj',\n                    (object) => {\n                        object.traverse((child) => {\n                            if ((child as THREE.Mesh).isMesh) {\n                                this.setMonkey(child as THREE.Mesh);\n                                const mesh = child as THREE.Mesh;\n                                (mesh.material as THREE.MeshPhongMaterial).color.setHex(0xFFFFFF);\n                            }\n                        })\n                        this.main.scene.add(object);\n                    },\n                    (xhr) => {\n                        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n                    },\n                    (error) => {\n                        console.log('An error happened');\n                    }\n                );\n            },\n            (xhr) => {\n                console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n            },\n            (error) => {\n                console.log('An error happened');\n            }\n        );\n    }\n\n    private setMonkey(monkey: THREE.Mesh) {\n        this.monkey = monkey;\n        this.monkeyLoaded = true;\n        this.monkeyConfig();\n    }\n\n    private onMouseMove(e: MouseEvent): void {\n        if (this.monkeyLoaded) {\n            const x = (e.clientX / this.main.renderer.domElement.clientWidth) * 2 - 1;\n            const y = -(e.clientY / this.main.renderer.domElement.clientHeight) * 2 + 1;\n            this.monkey.rotation.x = -y + .7 < 1 ?  -y + .7 : 1;\n            this.monkey.rotation.y = x;\n\n            if (this.shouldRaycast) {\n                this.raycaster.setFromCamera({\n                    x: x,\n                    y: y\n                }, this.main.camera);\n                this.intersects = this.raycaster.intersectObjects(this.pickableObjects, false);\n                \n                if (this.intersects.length > 0) {\n                    document.getElementsByTagName(\"body\")[0].style.cursor = \"pointer\";\n                } else {\n                    document.getElementsByTagName(\"body\")[0].style.cursor = \"initial\";\n                }\n            }\n        }\n    }\n\n    private onClick(e: MouseEvent) {\n        if (this.intersects.length > 0 && !Animations.currentAnimation) {\n            Animations.instantiateMonkeyTopRightAnimation(0, this.monkeyAnimation.finalY, this.monkeyAnimation.finalZ);\n            this.main.sidersInstance.sidersAnimation.shouldAnimate = true;\n            this.main.monkeyClickedSetter(true);\n        }\n    }\n\n    private monkeyConfig(): void {\n        this.monkeyAnimation = Animations.instantiateMonkeyAnimation();\n        // this.monkey.position.x = 2;\n        this.monkey.position.y = this.monkeyAnimation.initialY;\n        this.monkey.position.z = this.monkeyAnimation.initialZ;\n        this.pickableObjects = [this.monkey];\n        this.main.lightsInstance.monkeyLight.target = this.monkey;\n    }\n\n    private removeOnClickListener(): void {\n        document.removeEventListener('click', this.onClickEventListenerRef);\n        this.shouldRaycast = false;\n        document.getElementsByTagName(\"body\")[0].style.cursor = \"initial\";\n    }\n\n    public animateMonkey(): void {\n        if (this.monkeyLoaded) {\n            if (Animations.currentAnimation instanceof MonkeyAnimation) {\n                const currentCoords: { y: number, z: number } = Animations.currentAnimation.getNextFrame();\n                this.monkey.position.y = currentCoords.y;\n                this.monkey.position.z = currentCoords.z;\n            } else if ((Animations.currentAnimation instanceof MonkeyTopRightAnimation)) {\n                const currentCoords: { y: number, z: number } = Animations.currentAnimation.getNextFrame(this.removeOnClickListener.bind(this));\n                this.monkey.position.y = currentCoords.y;\n                this.monkey.position.z = -currentCoords.z;\n                // this.main.lightsInstance.monkeyLight.target = this.monkey;\n            }\n        }\n    }\n\n    public init(): void {\n        this.loadMonkey();\n        this.createRaycaster();\n        this.onClickEventListenerRef = this.onClick.bind(this);\n        document.addEventListener(\"mousemove\", this.onMouseMove.bind(this));\n        document.addEventListener(\"click\", this.onClickEventListenerRef);\n    }\n\n}\n\nexport default Monkey;","import AnimationFunctions from \"./AnimationFunctions\";\n\nclass MovingBackAnimation extends AnimationFunctions {\n\n    private initialX: number;\n    private initialY: number;\n    private initialZ: number;\n    private finalZ!: number;\n    private finalY!: number;\n    private finalX!: number;\n    public coordsArray!: { x: number[], y: number[], z: number[] };\n    private currentFrame: number;\n    public animationFinished: boolean;\n    public shouldAnimate: boolean;\n\n    constructor(initialX: number, initialY: number, initialZ: number) {\n        super()\n        this.initialX = initialX;\n        this.initialY = initialY;\n        this.initialZ = initialZ;\n        this.currentFrame = 0;\n        this.animationFinished = false;\n        this.shouldAnimate = false;\n        this.setCoords();\n    }\n\n    private setCoords(): void {\n        const coords = MovingBackAnimation.goToBack(this.initialX, this.initialY, this.initialZ, 0.037, 0.037825, 100);\n        this.coordsArray = coords;\n    }\n\n    public getNextFrame(): {x: number, y: number, z: number } {\n        const results = { \n            x: this.coordsArray.x[this.currentFrame],\n            y: this.coordsArray.y[this.currentFrame], \n            z: this.coordsArray.z[this.currentFrame] \n        };\n        this.currentFrame++;\n        if (this.currentFrame > (this.coordsArray.y.length - 1)) {\n            this.animationFinished = true;\n            this.shouldAnimate = false;\n            this.finalX = this.coordsArray.x[this.currentFrame - 1];\n            this.finalY = this.coordsArray.y[this.currentFrame - 1];\n            this.finalZ = this.coordsArray.z[this.currentFrame - 1];\n        }\n        return results;\n    }\n\n\n}\n\nexport default MovingBackAnimation;","\nclass AnimationFunctions {\n\n    protected static goToBack(\n        initialX: number,\n        initialY: number,\n        initialZ: number,\n        yIncrement: number,\n        zIncrement: number,\n        length: number\n    ): { x: number[], y: number[], z: number[] } {\n        const x = [initialX];\n        const y = [initialY];\n        const z = [initialZ];\n        for (let i = 0; i < length; i++) {\n            y[i + 1] = y[i] + yIncrement;\n            z[i + 1] = z[i] + zIncrement;\n            x[i + 1] = this.flattenFunc(z[i + 1], 0.07, 1) -3.075;\n        }\n        return { x, y, z };\n    }\n\n    private static flattenFunc(x: number, p1: number, p2: number): number {\n        return (p1 * Math.exp(p2 * x));\n    }\n}\n\n\nexport default AnimationFunctions;","import * as THREE from 'three/build/three.module';\nimport Main from './Main';\nimport SidersAnimation from './animations/siders/MovingBackAnimation';\nclass Siders {\n\n    private main: Main;\n    private leftKnot!: THREE.Mesh;\n    private rightKnot!: THREE.Mesh;\n    private material!: THREE.MeshNormalMaterial;\n    private leftKnotProps: { radius: number, tube: number, tubularSegments: number, radialSegments: number, p: number, q: number };\n    private rightKnotProps: { radius: number, tube: number, tubularSegments: number, radialSegments: number, p: number, q: number };\n    private lastUpdateTime: number;\n    private radiusCurrValue: number;\n    public sidersAnimation!: SidersAnimation;\n\n    constructor(main: Main) {\n        this.main = main;\n        this.leftKnotProps = { radius: 0.3, tube: 0.1, tubularSegments: 20, radialSegments: 20, p: 10, q: 20 };\n        this.rightKnotProps = { radius: 0.3, tube: 0.1, tubularSegments: 20, radialSegments: 20, p: 10, q: 20 };\n        this.lastUpdateTime = new Date().getTime();\n        this.radiusCurrValue = 1;\n    }\n\n    \n    private createMaterial(): void {\n        this.material = new THREE.MeshNormalMaterial();\n    }\n\n    private regenerateKnotGeometries(): void {\n        // LEFT\n        const newLeftGeometry = new THREE.TorusKnotGeometry(\n            this.leftKnotProps.radius, this.leftKnotProps.tube, this.leftKnotProps.tubularSegments, this.leftKnotProps.radialSegments, this.leftKnotProps.p, this.leftKnotProps.q\n        );\n        this.leftKnot.geometry.dispose();\n        this.leftKnot.geometry = newLeftGeometry;\n        // RIGHT\n        const newRightGeometry = new THREE.TorusKnotGeometry(\n            this.rightKnotProps.radius, this.rightKnotProps.tube, this.rightKnotProps.tubularSegments, this.rightKnotProps.radialSegments, this.rightKnotProps.p, this.rightKnotProps.q\n        );\n        this.rightKnot.geometry.dispose();\n        this.rightKnot.geometry = newRightGeometry;\n    }\n\n    private createLeftKnot(): void {\n        const geometry = new THREE.TorusKnotGeometry(this.leftKnotProps.radius, this.leftKnotProps.tube, this.leftKnotProps.tubularSegments, this.leftKnotProps.radialSegments, this.leftKnotProps.p, this.leftKnotProps.q);\n        this.leftKnot = new THREE.Mesh(geometry, this.material);\n        this.leftKnot.position.x = -3;\n        this.leftKnot.position.y = 2;\n        this.main.scene.add(this.leftKnot);\n    }\n\n    private createRightKnot(): void {\n        const geometry = new THREE.TorusKnotGeometry(this.rightKnotProps.radius, this.rightKnotProps.tube, this.rightKnotProps.tubularSegments, this.rightKnotProps.radialSegments, this.rightKnotProps.p, this.rightKnotProps.q);\n        this.rightKnot = new THREE.Mesh(geometry, this.material);\n        this.rightKnot.position.x = 3;\n        this.rightKnot.position.y = 2;\n        this.main.scene.add(this.rightKnot);\n    }\n\n    private waveFunction(start: number, range: number, step: number): number {\n        const curr = this.radiusCurrValue;\n        const p1 = curr % ((range - step) * 2);\n        const p2 = curr % (range - step);\n        this.radiusCurrValue = step + (this.radiusCurrValue % ((range-step) * 2));\n        if (p1 === p2) {\n            return p1 + start;\n        }\n        return p1 - p2 * 2 + start;\n    }\n\n    public updateKnots(): void {\n        if (new Date().getTime() - this.lastUpdateTime > 1) {\n            // this.leftKnotProps.radius = this.waveFunction(.2, .5, .1);\n            // console.log(this.leftKnotProps.radius, 'Siders.tsx', 'line: ', '64');\n            this.leftKnotProps.p = 1 + (this.leftKnotProps.p % 20);\n            this.rightKnotProps.p = 1 + (this.rightKnotProps.p % 20);\n            this.regenerateKnotGeometries();\n            this.lastUpdateTime = new Date().getTime();\n        }\n\n        // this.rotateKnots();\n    }\n\n    instantiateMovingBackAnimation(): void {\n        this.sidersAnimation = new SidersAnimation(this.leftKnot.position.x, this.leftKnot.position.y, this.leftKnot.position.z);\n    }\n\n    public animateKnots(): void {\n        if (this.sidersAnimation.shouldAnimate) {\n            const coords = this.sidersAnimation.getNextFrame();\n            this.leftKnot.position.x = coords.x;\n            this.leftKnot.position.y = coords.y;\n            this.leftKnot.position.z = -coords.z;\n\n            this.rightKnot.position.x = -coords.x;\n            this.rightKnot.position.y = coords.y;\n            this.rightKnot.position.z = -coords.z;\n        }\n    }\n\n\n    public init(): void {\n        this.createMaterial();\n        this.createLeftKnot();\n        this.createRightKnot();\n        this.instantiateMovingBackAnimation();\n    }\n\n}\n\nexport default Siders;","import * as THREE from 'three/build/three.module';\nimport Main from './Main';\n\nclass Wall {\n\n    private main: Main;\n    private material!: THREE.MeshPhongMaterial;\n    private wall!: THREE.Mesh;\n\n    constructor(main: Main) {\n        this.main = main;\n    }\n\n   \n    private createMaterial(): void {\n        this.material = new THREE.MeshPhongMaterial();\n    }\n\n    private createWall(): void {\n        const geometry = new THREE.PlaneGeometry(1000, 1000);\n        this.wall = new THREE.Mesh(geometry, this.material);\n        this.wall.position.z = -40;\n        this.main.scene.add(this.wall);\n    }\n\n\n\n    public init():void {\n        this.createMaterial();\n        this.createWall();\n    }\n\n}\n\nexport default Wall;","import * as THREE from 'three/build/three.module';\nimport Stats from 'three/examples/jsm/libs/stats.module'\nimport Lights from './Lights';\nimport Monkey from './Monkey';\nimport Siders from './Siders';\nimport Wall from './Wall';\n\nclass Main {\n\n    public canvas: HTMLCanvasElement;\n    public renderer!: THREE.WebGLRenderer;\n    public camera!: THREE.PerspectiveCamera;\n    public scene!: THREE.Scene;\n    public stats!: Stats;\n    public monkeyInstance!: Monkey;\n    public wallInstance!: Wall;\n    public lightsInstance!: Lights;\n    public sidersInstance!: Siders;\n    public monkeyClickedSetter: (clicked:boolean) => void;\n\n    constructor(canvas: HTMLCanvasElement, monkeyClickedSetter: (clicked:boolean) => void) {\n        this.canvas = canvas;\n        this.monkeyClickedSetter = monkeyClickedSetter;\n    }\n\n    private createScene(): void {\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(\"black\");\n    }\n\n    private createCamera(): void {\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, .1, 1000);\n        this.camera.position.z = 5;\n    }\n\n    private createRenderer(): void {\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas });\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    private createStats(): void {\n        this.stats = Stats();\n        document.body.appendChild(this.stats.dom)\n    }\n\n    private createMonkeyInstance(): void {\n        this.monkeyInstance = new Monkey(this);\n        this.monkeyInstance.init();\n    }\n\n    private createLightsInstance(): void {\n        this.lightsInstance = new Lights(this);\n        this.lightsInstance.init();\n    }\n\n    private createSidersInstance(): void {\n        this.sidersInstance = new Siders(this);\n        this.sidersInstance.init();\n    }\n\n    private createWallInstance(): void {\n        this.wallInstance = new Wall(this);\n        this.wallInstance.init()\n    }\n\n    private onWindowResize(): void {\n        const windowMaxHeight = window.innerHeight < 1000 ? window.innerHeight : 1000;\n        this.camera.aspect = window.innerWidth / windowMaxHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, windowMaxHeight);\n        this.render();\n    }\n\n    private animationLoop() {\n        requestAnimationFrame(this.animationLoop.bind(this));\n        this.lightsInstance.updateHelpers();\n        this.sidersInstance.updateKnots();\n        this.lightsInstance.changeLightColours();\n        this.monkeyInstance.animateMonkey();\n        this.sidersInstance.animateKnots();\n        this.renderer.render(this.scene, this.camera);\n        this.stats.update();\n    }\n\n    public init(): void {\n        this.createRenderer();\n        this.createCamera();\n        this.createScene();\n        this.createStats();\n\n        this.createMonkeyInstance();\n        this.createLightsInstance();\n        this.createSidersInstance();\n        this.createWallInstance();\n\n        window.addEventListener('resize', this.onWindowResize.bind(this), false);\n        this.animationLoop();\n    }\n\n    private render(): void {\n        this.renderer.render(this.scene, this.camera);\n    }\n\n}\n\nexport default Main;","import { createRef, useEffect, useState } from 'react';\nimport './ThreeD.css';\nimport Main from '../../threeD/Main';\n\nconst ThreeD = ({ setMonkeyClicked }: {setMonkeyClicked:(clicked: boolean) => void}) => {\n  const [webGLMainInstance, setWebGLMainInstance] = useState<Main>();\n  const canvasRef = createRef<HTMLCanvasElement>();\n\n  useEffect(() => {\n    if (canvasRef && canvasRef.current) {\n      const webGLMainInstance: Main = new Main(canvasRef.current, setMonkeyClicked);\n      setWebGLMainInstance(webGLMainInstance);\n      webGLMainInstance.init();\n    }\n\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} className=\"canvas\"></canvas>\n  );\n};\n\nexport default ThreeD;","import './PrimaryHeading.css';\n\nconst PrimaryHeading = ({ content }: { content: string}) => {\n\n    return (\n        <span className=\"primary-heading\">\n            {content}\n        </span>\n    );\n};\n\nexport default PrimaryHeading;","import './SecondaryHeading.css';\n\nconst SecondaryHeading = ({ content }: { content: string}) => {\n\n    return (\n        <span className=\"secondary-heading\">\n            {content}\n        </span>\n    );\n};\n\nexport default SecondaryHeading;","import './TertiaryHeading.css';\n\nconst TertiaryHeading = ({ content }: { content: string }) => {\n\n    return (\n        <span className=\"tertiary-heading\">\n            {content}\n        </span>\n    );\n};\n\nexport default TertiaryHeading;","import './BoxTitle.css';\nimport TertiaryHeading from \"../Headings/TertiaryHeading/TertiaryHeading\";\n\nconst BoxTile = ({ title }: { title: string }) => {\n\n    return (\n        <div className=\"box-title-container\">\n            <TertiaryHeading content={title}/>\n        </div>\n    );\n};\n\nexport default BoxTile;","import './Timeline.css';\nimport BoxTitle from '../BoxTitle/BoxTitle';\n\nconst Timeline = () => {\n\n    return (\n        <>\n            <div className=\"timeline-profile-intro timeline-side-box\">\n                <BoxTitle title=\"Intro\"/>\n            </div>\n        </>\n    );\n};\n\nexport default Timeline;","interface Paths { [key: string]: string };\nexport const pathsEnum: Paths = {\n    TIMELINE: \"/timeline\",\n    ABOUT: \"/about\",\n    EXPERIENCE: \"/experience\",\n    CONTACT: \"/contact\",\n    PROJECTS: \"/projects\"\n};","import './About.css';\n\nconst About = () => {\n\n    return (\n        <div>about</div>\n    );\n};\n\nexport default About;","import Timeline from '../Timeline/Timeline';\nimport { BrowserRouter as _, Redirect, Route, Switch } from 'react-router-dom/cjs/react-router-dom';\nimport { pathsEnum } from '../../enums/paths';\nimport About from '../About/About';\n\nimport './ProfileBody.css';\n\nconst ProfileBody = () => {\n\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Redirect to={pathsEnum.TIMELINE} />\n            </Route>\n            <Route path={pathsEnum.TIMELINE}>\n                <section className=\"profile-timeline-container\">\n                    <Timeline />\n                </section>\n            </Route>\n            <Route path={pathsEnum.ABOUT}>\n                <section className=\"profile-about-container\">\n                    <About />\n                </section>\n            </Route>\n            <Route path={pathsEnum.EXPERIENCE}>\n                <section className=\"profile-experience-container\">\n                </section>\n            </Route>\n            <Route path={pathsEnum.PROJECTS}>\n                <section className=\"profile-projects-container\">\n                </section>\n            </Route>\n            <Route path={pathsEnum.CONTACT}>\n                <section className=\"profile-contact-container\">\n                </section>\n            </Route>\n        </Switch>\n    );\n};\n\nexport default ProfileBody;","export default __webpack_public_path__ + \"static/media/profile.f3dd0666.jpeg\";","import './ProfileHeader.css';\nimport profileImg from '../../assets/images/profile.jpeg';\nimport { useHistory } from 'react-router';\nimport { pathsEnum } from '../../enums/paths';\nimport { useEffect, useState } from 'react';\n\nconst ProfileHeader = () => {\n    const history = useHistory();\n    const [, setRefreshTab] = useState('');\n\n\n    const itemClickHandler = (item: string) => {\n        const path = pathsEnum[item.toUpperCase()];\n        history.push(path);\n        setRefreshTab(item);\n    };\n\n    const headerItemsJSX = [\"Timeline\", \"About\", \"Experience\", \"Projects\", \"Contact\"]\n        .map(item => {\n            const activeItem = history.location.pathname.slice(1);\n            const activeItemClass = activeItem === item.toLowerCase() ? \"profile-header-item-active\" : \"profile-header-item-inactive\";\n            return (\n                <li key={item}\n                    className={`profile-header-item ${activeItemClass}`}\n                    onClick={(event: React.MouseEvent<HTMLElement>) => itemClickHandler(item)}\n                >\n                    {item}\n                </li>\n            );\n        });\n\n    return (\n        <>\n            <div className=\"profile-header-profile-img-container\">\n                <div className=\"profile-header-profile-img-inner-container\">\n                    <img className=\"profile-img\" src={profileImg} />\n                </div>\n            </div>\n            <div className=\"profile-header-my-name\">\n                <div className=\"profile-header-my-name-inner-container\">\n                    <p>Nikos Theodoropoulos</p>\n                </div>\n            </div>\n            <ul className=\"profile-inner-header-container\">\n                {headerItemsJSX}\n            </ul>\n        </>\n    );\n};\n\nexport default ProfileHeader;","import ProfileBody from '../../components/ProfileBody/ProfileBody';\nimport ProfileHeader from '../../components/ProfileHeader/ProfileHeader';\nimport './Profile.css';\n\nconst Profile = () => {\n\n    return (\n        <>\n            <div className=\"profile-transparent-background-container\"></div>\n            <div className=\"profile-header-container\">\n                <ProfileHeader />\n            </div>\n            <div className=\"profile-body-container\">\n                <ProfileBody />\n            </div>\n        </>\n    );\n};\n\nexport default Profile;","import './LandingPage.css';\nimport ThreeD from '../../components/ThreeD/ThreeD';\nimport PrimaryHeading from '../../components/Headings/PrimaryHeading/PrimaryHeading';\nimport SecondaryHeading from '../../components/Headings/SecondaryHeading/SecondaryHeading';\nimport { useEffect, useState } from 'react';\nimport Profile from '../../containers/Profile/Profile';\nimport { useHistory } from 'react-router';\nimport { pathsEnum } from '../../enums/paths';\n\ninterface ExitingClasses { primaryHeading: string, secondaryHeading: string };\nconst LandingPage = () => {\n\n    const [monkeyClicked, setMonkeyClicked] = useState<boolean>(false);\n    const [exitingAnimationFinished, setExitingAnimationFinished] = useState<boolean>(false);\n    const [landingPageClass, setLandingPageClass] = useState<string>(\"landing-page-main-before-animation\");\n    const history = useHistory();\n    \n    useEffect(() => {\n        if (monkeyClicked) {\n            const animationTimer = setTimeout(() => {\n                setExitingAnimationFinished(true);\n                setLandingPageClass(\"landing-page-main-after-animation\");\n                clearTimeout(animationTimer);\n            }, 1800);\n        }\n    }, [monkeyClicked]);\n\n    let exitingClasses: ExitingClasses = { primaryHeading: '', secondaryHeading: '' };\n    if (monkeyClicked) {\n        exitingClasses[\"primaryHeading\"] = \"primary-heading-exitting-animation\";\n        exitingClasses[\"secondaryHeading\"] = \"secondary-heading-exitting-animation\";\n    }\n\n    return (\n        <main className={\"landing-page-main \" + landingPageClass}>\n            <div className=\"canvas-container-landing-page\">\n                <ThreeD setMonkeyClicked={setMonkeyClicked} />\n            </div>\n            { !exitingAnimationFinished ?\n                <>\n                    <div className={\"landing-page-title \" + exitingClasses.primaryHeading}>\n                        <PrimaryHeading content=\"Welcome to my\" />\n                    </div>\n                    <div className={\"landing-page-subtitle \" + exitingClasses.secondaryHeading}>\n                        <SecondaryHeading content=\"Personal space\" />\n                    </div>\n                </>\n                :\n                <>\n                    <div className=\"gap gap1\"></div>\n                    <section className=\"profile-section\">\n                        <Profile />\n                    </section>\n                    <div className=\"gap gap2\"></div>\n                </>\n\n            }\n        </main >\n    );\n};\n\nexport default LandingPage;","import { useState, useEffect } from 'react';\n\nexport interface State { currentPage?: string }\n\nlet globalState: State = {};\nlet listeners: React.Dispatch<React.SetStateAction<State>>[] = [];\nlet actions: any = {};\n\nexport const useStore = (shouldListen = true):\n    [State, (actionIdentifier: string, payload: any) => void] => {\n\n    const setState = useState(globalState)[1];\n    const dispatch = (actionIdentifier: string, payload: any, shouldNotify:boolean = true) => {\n        const newState: State = actions[actionIdentifier](globalState, payload);\n        globalState = { ...globalState, ...newState };\n\n        if (shouldNotify) {\n            for (let i = 0; i < listeners.length; i++) {\n                listeners[i](globalState);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (shouldListen) {\n            listeners.push(setState);\n        }\n\n        return () => {\n            if (shouldListen) {\n                listeners = listeners.filter(li => li !== setState);\n            }\n        };\n\n    }, [setState, shouldListen]);\n\n    return [globalState, dispatch];\n};\n\nexport const initStore = (userActions: any, initialState: State) => {\n    if (initialState) {\n        globalState = { ...globalState, ...initialState };\n    }\n    actions = { ...actions, ...userActions };\n};\n","import { initStore } from '../store';\nimport { State } from '../store';\n\nexport const PAGES_ENUM = {\n    TIMELINE: \"TIMELINE\",\n    ABOUT: \"ABOUT\",\n    EXPERIENCE: \"EXPERIENCE\",\n    PROJECTS: \"PROJECTS\",\n    CONTACTS: \"CONTACTS\"\n};\n\nexport const STORE_CURRENT_PAGE = \"STORE_CURRENT_PAGE\";\n\nconst configureStore = () => {\n    const actions = {\n        [STORE_CURRENT_PAGE]: (curState: State, currentPage: string) => {\n            return { currentPage };\n        }\n    }\n    initStore(actions, { currentPage: PAGES_ENUM.TIMELINE });\n}\n\n\nexport default configureStore;","import './App.css';\nimport { BrowserRouter as Router } from \"react-router-dom/cjs/react-router-dom\";\nimport LandingPage from './containers/LandingPage/LandingPage';\nimport playerChoiseStore from './hooks-store/stores/current-page';\n\nplayerChoiseStore();\n\nfunction App() {\n\n  return (\n    <Router>\n      <LandingPage />\n    </Router>\n  );\n}\n\nexport default App;\n","const trackerURL = 'https://www.cloudflare.com/cdn-cgi/trace';\nconst dbURL = 'https://my-gh-page-default-rtdb.europe-west1.firebasedatabase.app/';\nconst storeVisitor = () => {\n    fetch(trackerURL)\n        .then(res => res.text())\n        .then((visitorData: String) => {\n            fetch(dbURL+`${new Date().getTime()}.json`, {\n                method: \"POST\",\n                headers: {\n                    \"Application\": \"application/json\",\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({visitorData: visitorData, date: new Date()})\n            })\n                .then(res => res)\n        });\n};\n\n\n\nexport default storeVisitor;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport visitorTracker from './utils/visitor-tracker';\nvisitorTracker();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}