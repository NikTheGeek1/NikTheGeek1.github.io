{"version":3,"sources":["threeD/Lights.tsx","threeD/animations/MonkeyAnimation.tsx","threeD/animations/AnimationFunctions.tsx","threeD/Monkey.tsx","threeD/Siders.tsx","threeD/Main.tsx","components/ThreeD/ThreeD.tsx","components/Headings/PrimaryHeading/PrimaryHeading.tsx","components/Headings/SecondaryHeading/SecondaryHeading.tsx","containers/LandingPage/LandingPage.tsx","App.tsx","index.tsx"],"names":["Lights","main","monkeyLight","monkeyHelper","this","THREE","Math","PI","position","set","scene","add","createMonkeyLight","update","color","setHex","getHex","MonkeyAnimation","initialY","initialZ","finalY","finalZ","coords","currentFrame","results","y","z","length","AnimationFunctions","monkeyAnimation","setCoords","moveInFromBack","zIncrement","i","parabolicFunc","abs","x","yStart","p1","p2","Monkey","monkey","monkeyLoaded","MTLLoader","load","materials","preload","objLoader","OBJLoader","setMaterials","object","traverse","child","isMesh","setMonkey","material","xhr","console","log","loaded","total","error","monkeyConfig","e","clientX","renderer","domElement","clientWidth","clientY","clientHeight","rotation","Animations","instantiateMonkeyAnimation","currentCoords","getNextFrame","loadMonkey","document","addEventListener","onMouseMove","bind","Siders","leftKnot","rightKnot","leftKnotProps","rightKnotProps","lastUpdateTime","radiusCurrValue","radius","tube","tubularSegments","radialSegments","p","q","Date","getTime","newLeftGeometry","geometry","dispose","newRightGeometry","start","range","step","curr","regenerateKnotGeometries","createMaterial","createLeftKnot","createRightKnot","Main","canvas","camera","stats","monkeyInstance","lightsInstance","sidersInstance","background","window","innerWidth","innerHeight","setSize","Stats","body","appendChild","dom","init","aspect","updateProjectionMatrix","render","requestAnimationFrame","animationLoop","updateHelpers","updateKnots","changeLightColours","animateMonkey","createRenderer","createCamera","createScene","createStats","createMonkeyInstance","createLightsInstance","createSidersInstance","onWindowResize","ThreeD","useState","setWebGLMainInstance","canvasRef","createRef","useEffect","current","webGLMainInstance","ref","className","PrimaryHeading","content","SecondaryHeading","LandingPage","App","path","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b85090e0.chunk.js","sourcesContent":["import * as THREE from 'three/build/three.module';\nimport Main from './Main';\n\nclass Lights {\n\n    private main: Main;\n    public monkeyLight!: THREE.SpotLight;\n    private monkeyHelper!: THREE.SpotLightHelper;\n\n    constructor(main: Main) {\n        this.main = main;\n    }\n\n    private createMonkeyLight(): void {\n        this.monkeyLight = new THREE.SpotLight(\"white\", 10, 10, Math.PI / 10, .4, 1);\n        this.monkeyLight.position.set(2.5, 2.5, 7)\n        this.main.scene.add(this.monkeyLight);\n\n        this.monkeyHelper = new THREE.SpotLightHelper(this.monkeyLight);\n        // this.main.scene.add(this.monkeyHelper);\n    }\n\n    public init():void {\n        this.createMonkeyLight();\n    }\n\n    public updateHelpers():void {\n        this.monkeyHelper.update()    \n    }\n\n    public changeLightColours(): void {\n        this.monkeyLight.color.setHex((this.monkeyLight.color.getHex() + 1000) % 1000000);\n    }\n\n\n}\n\nexport default Lights;","\n\nclass MonkeyAnimation {\n\n    public initialY: number;\n    public initialZ: number;\n    public finalY: number;\n    public finalZ: number;\n    public coords!: { y: number[], z: number[] };\n    private currentFrame: number;\n\n    constructor() {\n        this.initialY = -2;\n        this.initialZ = -20;\n        this.finalY = 2;\n        this.finalZ = 0;\n        this.currentFrame = 0;\n    }\n\n    public setCoords(coords: { y: number[], z: number[] }): void {\n        this.coords = coords;\n    }\n\n    public getNextFrame(): { y: number, z: number } {\n        const results = { y: this.coords.y[this.currentFrame], z: this.coords.z[this.currentFrame] };\n        if (this.currentFrame < (this.coords.y.length - 1)) this.currentFrame++;\n        return results;\n    }\n\n\n}\n\nexport default MonkeyAnimation;","import MonkeyAnimation from './MonkeyAnimation';\n\nclass AnimationFunctions {\n\n    private static monkeyAnimation: MonkeyAnimation;\n\n    public static instantiateMonkeyAnimation(): MonkeyAnimation {\n        if (!this.monkeyAnimation) {\n            this.monkeyAnimation = new MonkeyAnimation();\n        }\n        this.monkeyAnimation.setCoords(\n            this.moveInFromBack(\n                this.monkeyAnimation.initialY, this.monkeyAnimation.initialZ,\n                0.2, 100,\n                )\n            );\n        return this.monkeyAnimation;\n    }\n\n    private static moveInFromBack(\n        initialY: number, initialZ: number,\n        zIncrement: number,\n        length: number\n    ): { y: number[], z: number[] } {\n        const y = [initialY];\n        const z = [initialZ];\n        for (let i = 0; i < length; i++) {\n            z[i + 1] = z[i] + zIncrement;\n            y[i + 1] = this.parabolicFunc(\n                z[i + 1] + Math.abs(initialZ), initialY,\n                1.55, .07\n                )\n        }\n        return { y, z };\n    }\n\n    private static parabolicFunc(x: number, yStart: number, p1: number, p2: number): number {\n        return (p1 * x - p2 * x ** 2) + yStart;\n    }\n\n}\n\nexport default AnimationFunctions;","import Main from './Main';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three/build/three.module';\nimport Animations from '../threeD/animations/AnimationFunctions';\nimport MonkeyAnimation from './animations/MonkeyAnimation';\n\nclass Monkey {\n\n    private main: Main;\n    private monkey!: THREE.Mesh;\n    private monkeyLoaded: boolean;\n    private monkeyAnimation!: MonkeyAnimation;\n\n    constructor(main: Main) {\n        this.main = main;\n        this.monkeyLoaded = false;\n    }\n\n    private loadMonkey(): void {\n        const loader = new MTLLoader();\n        loader.load(\n            'three-assets/monkey.mtl',\n            (materials) => {\n                materials.preload();\n\n                const objLoader: OBJLoader = new OBJLoader();\n                objLoader.setMaterials(materials);\n                objLoader.load(\n                    'three-assets/monkey.obj',\n                    (object) => {\n                        object.traverse((child) => {\n                            if ((child as THREE.Mesh).isMesh) {\n                                this.setMonkey(child as THREE.Mesh);\n                                const mesh = child as THREE.Mesh;\n                                (mesh.material as THREE.MeshPhongMaterial).color.setHex(0xFFFFFF);\n                            }\n                        })\n                        this.main.scene.add(object);\n                    },\n                    (xhr) => {\n                        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n                    },\n                    (error) => {\n                        console.log('An error happened');\n                    }\n                );\n            },\n            (xhr) => {\n                console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n            },\n            (error) => {\n                console.log('An error happened');\n            }\n        );\n    }\n\n    private setMonkey(monkey: THREE.Mesh) {\n        this.monkey = monkey;\n        this.monkeyLoaded = true;\n        this.monkeyConfig();\n    }\n\n    private onMouseMove(e: MouseEvent): void {\n        if (this.monkeyLoaded) {\n            const x = (e.clientX / this.main.renderer.domElement.clientWidth) * 2 - 1;\n            const y = -(e.clientY / this.main.renderer.domElement.clientHeight) * 2 + 1;\n            this.monkey.rotation.x = -y + .7;\n            this.monkey.rotation.y = x;\n        }\n    }\n\n    private monkeyConfig(): void {\n        this.monkeyAnimation = Animations.instantiateMonkeyAnimation();\n        // this.monkey.position.x = 2;\n        this.monkey.position.y = this.monkeyAnimation.initialY;\n        this.monkey.position.z = this.monkeyAnimation.initialZ;\n        \n    }\n\n    public animateMonkey(): void {\n        if (this.monkeyLoaded) {\n            const currentCoords: {y: number, z: number} = this.monkeyAnimation.getNextFrame();\n            this.monkey.position.y = currentCoords.y;\n            this.monkey.position.z = currentCoords.z;\n        }\n    }\n\n    public init(): void {\n        this.loadMonkey();\n        document.addEventListener(\"mousemove\", this.onMouseMove.bind(this))\n    }\n\n}\n\nexport default Monkey;","import * as THREE from 'three/build/three.module';\nimport Main from './Main';\n\nclass Siders {\n\n    private main: Main;\n    private leftKnot!: THREE.Mesh;\n    private rightKnot!: THREE.Mesh;\n    private material!: THREE.MeshNormalMaterial;\n    private leftKnotProps: { radius: number, tube: number, tubularSegments: number, radialSegments: number, p: number, q: number };\n    private rightKnotProps: { radius: number, tube: number, tubularSegments: number, radialSegments: number, p: number, q: number };\n    private lastUpdateTime: number;\n    private radiusCurrValue: number;\n\n    constructor(main: Main) {\n        this.main = main;\n        this.leftKnotProps = { radius: 0.3, tube: 0.1, tubularSegments: 20, radialSegments: 20, p: 10, q: 20 };\n        this.rightKnotProps = { radius: 0.3, tube: 0.1, tubularSegments: 20, radialSegments: 20, p: 10, q: 20 };\n        this.lastUpdateTime = new Date().getTime();\n        this.radiusCurrValue = 1;\n    }\n\n    private createMaterial(): void {\n        this.material = new THREE.MeshNormalMaterial();\n    }\n\n    private regenerateKnotGeometries(): void {\n        // LEFT\n        const newLeftGeometry = new THREE.TorusKnotGeometry(\n            this.leftKnotProps.radius, this.leftKnotProps.tube, this.leftKnotProps.tubularSegments, this.leftKnotProps.radialSegments, this.leftKnotProps.p, this.leftKnotProps.q\n        );\n        this.leftKnot.geometry.dispose();\n        this.leftKnot.geometry = newLeftGeometry;\n        // RIGHT\n        const newRightGeometry = new THREE.TorusKnotGeometry(\n            this.rightKnotProps.radius, this.rightKnotProps.tube, this.rightKnotProps.tubularSegments, this.rightKnotProps.radialSegments, this.rightKnotProps.p, this.rightKnotProps.q\n        );\n        this.rightKnot.geometry.dispose();\n        this.rightKnot.geometry = newRightGeometry;\n    }\n\n    private createLeftKnot(): void {\n        const geometry = new THREE.TorusKnotGeometry(this.leftKnotProps.radius, this.leftKnotProps.tube, this.leftKnotProps.tubularSegments, this.leftKnotProps.radialSegments, this.leftKnotProps.p, this.leftKnotProps.q);\n        this.leftKnot = new THREE.Mesh(geometry, this.material);\n        this.leftKnot.position.x = -3;\n        this.leftKnot.position.y = 2;\n        this.main.scene.add(this.leftKnot);\n    }\n\n    private createRightKnot(): void {\n        const geometry = new THREE.TorusKnotGeometry(this.rightKnotProps.radius, this.rightKnotProps.tube, this.rightKnotProps.tubularSegments, this.rightKnotProps.radialSegments, this.rightKnotProps.p, this.rightKnotProps.q);\n        this.rightKnot = new THREE.Mesh(geometry, this.material);\n        this.rightKnot.position.x = 3;\n        this.rightKnot.position.y = 2;\n        this.main.scene.add(this.rightKnot);\n    }\n\n    private rotateKnots(): void {\n        // this.leftKnot.rotation.x += 0.1;\n        this.leftKnot.rotation.y += 0.1;\n    }\n\n    private waveFunction(start: number, range: number, step: number): number {\n        const curr = this.radiusCurrValue;\n        const p1 = curr % ((range - step) * 2);\n        const p2 = curr % (range - step);\n        this.radiusCurrValue = step + (this.radiusCurrValue % ((range-step) * 2));\n        if (p1 === p2) {\n            return p1 + start;\n        }\n        return p1 - p2 * 2 + start;\n    }\n\n    public updateKnots(): void {\n        if (new Date().getTime() - this.lastUpdateTime > 1) {\n            // this.leftKnotProps.radius = this.waveFunction(.2, .5, .1);\n            // console.log(this.leftKnotProps.radius, 'Siders.tsx', 'line: ', '64');\n            this.leftKnotProps.p = 1 + (this.leftKnotProps.p % 20);\n            this.rightKnotProps.p = 1 + (this.rightKnotProps.p % 20);\n            this.regenerateKnotGeometries();\n            this.lastUpdateTime = new Date().getTime();\n        }\n\n        // this.rotateKnots();\n    }\n\n    public init(): void {\n        this.createMaterial();\n        this.createLeftKnot();\n        this.createRightKnot();\n    }\n\n}\n\nexport default Siders;","import * as THREE from 'three/build/three.module';\nimport Stats from 'three/examples/jsm/libs/stats.module'\nimport Lights from './Lights';\nimport Monkey from './Monkey';\nimport Siders from './Siders';\n\nclass Main {\n\n    public canvas: HTMLCanvasElement;\n    public renderer!: THREE.WebGLRenderer;\n    public camera!: THREE.PerspectiveCamera;\n    public scene!: THREE.Scene;\n    public stats!: Stats;\n    public monkeyInstance!: Monkey;\n    public lightsInstance!: Lights;\n    public sidersInstance!: Siders;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n    }\n\n    private createScene(): void {\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(\"black\");\n    }\n\n    private createCamera(): void {\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, .1, 1000);\n        this.camera.position.z = 5;\n    }\n\n    private createRenderer(): void {\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas });\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    private createStats(): void {\n        this.stats = Stats();\n        document.body.appendChild(this.stats.dom)\n    }\n\n    private createMonkeyInstance(): void {\n        this.monkeyInstance = new Monkey(this);\n        this.monkeyInstance.init();\n    }\n\n    private createLightsInstance(): void {\n        this.lightsInstance = new Lights(this);\n        this.lightsInstance.init();\n    }\n\n    private createSidersInstance(): void {\n        this.sidersInstance = new Siders(this);\n        this.sidersInstance.init();\n    }\n\n    private onWindowResize(): void {\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.render();\n    }\n\n    private animationLoop() {\n        requestAnimationFrame(this.animationLoop.bind(this));\n        this.lightsInstance.updateHelpers();\n        this.sidersInstance.updateKnots();\n        this.lightsInstance.changeLightColours();\n        this.monkeyInstance.animateMonkey();\n        this.renderer.render(this.scene, this.camera);\n        this.stats.update();\n    }\n\n    public init(): void {\n        this.createRenderer();\n        this.createCamera();\n        this.createScene();\n        this.createStats();\n\n        this.createMonkeyInstance();\n        this.createLightsInstance();\n        this.createSidersInstance();\n\n        window.addEventListener('resize', this.onWindowResize.bind(this), false);\n        this.animationLoop();\n    }\n\n    private render(): void {\n        this.renderer.render(this.scene, this.camera);\n    }\n\n}\n\nexport default Main;","import { createRef, useEffect, useState } from 'react';\nimport './ThreeD.css';\nimport Main from '../../threeD/Main';\n\nconst ThreeD = () => {\n    const [webGLMainInstance, setWebGLMainInstance] = useState<Main>();\n    const canvasRef = createRef<HTMLCanvasElement>();\n  \n    useEffect(() => {\n      if (canvasRef && canvasRef.current) {\n        const webGLMainInstance: Main = new Main(canvasRef.current);\n        setWebGLMainInstance(webGLMainInstance);\n        webGLMainInstance.init();\n      }\n  \n    }, []);\n  \n    return (\n      <canvas ref={canvasRef} className=\"canvas\"></canvas>\n    );\n};\n\nexport default ThreeD;","import './PrimaryHeading.css';\n\nconst PrimaryHeading = ({ content }: { content: string}) => {\n\n    return (\n        <span className=\"primary-heading\">\n            {content}\n        </span>\n    );\n};\n\nexport default PrimaryHeading;","import './SecondaryHeading.css';\n\nconst SecondaryHeading = ({ content }: { content: string}) => {\n\n    return (\n        <span className=\"secondary-heading\">\n            {content}\n        </span>\n    );\n};\n\nexport default SecondaryHeading;","import './LandingPage.css';\nimport ThreeD from '../../components/ThreeD/ThreeD';\nimport PrimaryHeading from '../../components/Headings/PrimaryHeading/PrimaryHeading';\nimport SecondaryHeading from '../../components/Headings/SecondaryHeading/SecondaryHeading';\n\nconst LandingPage = () => {\n\n    return (\n        <main className=\"landing-page-main\">\n            <div className=\"canvas-container-landing-page\">\n                <ThreeD />\n            </div>\n            <div className=\"landing-page-title\">\n                <PrimaryHeading content=\"Welcome to my\" />\n            </div>\n            <div className=\"landing-page-subtitle\">\n                <SecondaryHeading content=\"To my personal space\" />\n            </div>\n        </main>\n    );\n};\n\nexport default LandingPage;","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom/cjs/react-router-dom';\nimport LandingPage from './containers/LandingPage/LandingPage';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          {LandingPage}\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}