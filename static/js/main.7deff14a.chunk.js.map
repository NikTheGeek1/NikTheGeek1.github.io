{"version":3,"sources":["threeD/Lights.tsx","threeD/animations/monkey/MonkeyInitialAnimation.tsx","threeD/animations/monkey/MonkeyTopRightAnimation.tsx","threeD/animations/monkey/AnimationFunctions.tsx","threeD/Monkey.tsx","threeD/animations/siders/MovingBackAnimation.tsx","threeD/animations/siders/AnimationFunctions.tsx","threeD/Siders.tsx","threeD/Main.tsx","components/ThreeD/ThreeD.tsx","components/Headings/PrimaryHeading/PrimaryHeading.tsx","components/Headings/SecondaryHeading/SecondaryHeading.tsx","containers/LandingPage/LandingPage.tsx","App.tsx","index.tsx"],"names":["Lights","main","monkeyLightAtStartOfTheAnimation","monkeyLight","monkeyHelper","this","THREE","Math","PI","position","set","targetObject","scene","add","target","createMonkeyLight","createMonkeyLightAtStartOfTheAnimation","update","color","setHex","getHex","MonkeyAnimation","initialY","initialZ","finalY","finalZ","coords","currentFrame","animationFinished","results","y","z","length","AnimationFunctions","currentAnimation","undefined","MonkeyTopRightAnimation","initialX","finalX","coordsArray","onEndCb","monkeyAnimation","setCoords","moveInFromBack","monkeyTopRightAnimation","goToTopAndBack","zIncrement","i","parabolicFunc","abs","x","yStart","p1","p2","flattenFunc","exp","Monkey","monkey","monkeyLoaded","raycaster","intersects","pickableObjects","onClickEventListenerRef","Array","MTLLoader","load","materials","preload","objLoader","OBJLoader","setMaterials","object","traverse","child","isMesh","setMonkey","material","xhr","console","log","loaded","total","error","monkeyConfig","e","clientX","renderer","domElement","clientWidth","clientY","clientHeight","rotation","setFromCamera","camera","intersectObjects","document","getElementsByTagName","style","cursor","Animations","instantiateMonkeyTopRightAnimation","sidersInstance","sidersAnimation","shouldAnimate","instantiateMonkeyAnimation","lightsInstance","removeEventListener","currentCoords","getNextFrame","removeOnClickListener","bind","loadMonkey","createRaycaster","onClick","addEventListener","onMouseMove","MovingBackAnimation","goToBack","yIncrement","Siders","leftKnot","rightKnot","leftKnotProps","rightKnotProps","lastUpdateTime","radiusCurrValue","radius","tube","tubularSegments","radialSegments","p","q","Date","getTime","newLeftGeometry","geometry","dispose","newRightGeometry","start","range","step","curr","regenerateKnotGeometries","SidersAnimation","createMaterial","createLeftKnot","createRightKnot","instantiateMovingBackAnimation","Main","canvas","stats","monkeyInstance","background","window","innerWidth","innerHeight","setSize","Stats","body","appendChild","dom","init","aspect","updateProjectionMatrix","render","requestAnimationFrame","animationLoop","updateHelpers","updateKnots","changeLightColours","animateMonkey","animateKnots","createRenderer","createCamera","createScene","createStats","createMonkeyInstance","createLightsInstance","createSidersInstance","onWindowResize","ThreeD","useState","setWebGLMainInstance","canvasRef","createRef","useEffect","current","webGLMainInstance","ref","className","PrimaryHeading","content","SecondaryHeading","LandingPage","App","path","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7deff14a.chunk.js","sourcesContent":["import * as THREE from 'three/build/three.module';\nimport Main from './Main';\n\nclass Lights {\n\n    private main: Main;\n    public monkeyLightAtStartOfTheAnimation!: THREE.SpotLight;\n    public monkeyLight!: THREE.SpotLight;\n    private monkeyHelper!: THREE.SpotLightHelper;\n\n    constructor(main: Main) {\n        this.main = main;\n    }\n\n    private createMonkeyLightAtStartOfTheAnimation(): void {\n        this.monkeyLightAtStartOfTheAnimation = new THREE.SpotLight(0x00ff00, 10, 100, Math.PI / 10, .4, 1);\n        this.monkeyLightAtStartOfTheAnimation.position.set(0, 10, 0);\n        const targetObject = new THREE.Object3D();\n        targetObject.position.set(0, 0, -20);\n        this.main.scene.add(targetObject);\n        this.monkeyLightAtStartOfTheAnimation.target = targetObject;\n        this.main.scene.add(this.monkeyLightAtStartOfTheAnimation);\n        \n\n        const helper = new THREE.SpotLightHelper(this.monkeyLightAtStartOfTheAnimation);\n        // this.main.scene.add(helper);\n    }\n\n    private createMonkeyLight(): void {\n        this.monkeyLight = new THREE.SpotLight(\"white\", 10, 12, Math.PI / 10 , .4, 1);\n        this.monkeyLight.position.set(2.5, 5.5, 7)\n        this.main.scene.add(this.monkeyLight);\n\n        this.monkeyHelper = new THREE.SpotLightHelper(this.monkeyLight);\n        // this.main.scene.add(this.monkeyHelper);\n    }\n\n    public init():void {\n        this.createMonkeyLight();\n        this.createMonkeyLightAtStartOfTheAnimation();\n    }\n\n    public updateHelpers():void {\n        this.monkeyHelper.update()    \n    }\n\n    public changeLightColours(): void {\n        this.monkeyLight.color.setHex((this.monkeyLight.color.getHex() + 1000) % 1000000);\n    }\n\n\n}\n\nexport default Lights;","import AnimationFunctions from \"./AnimationFunctions\";\n\nclass MonkeyAnimation {\n\n    public initialY: number;\n    public initialZ: number;\n    public finalY: number;\n    public finalZ: number;\n    public coords!: { y: number[], z: number[] };\n    private currentFrame: number;\n    public animationFinished: boolean;\n\n    constructor() {\n        this.initialY = -2;\n        this.initialZ = -20;\n        this.finalY = 2;\n        this.finalZ = 0;\n        this.currentFrame = 0;\n        this.animationFinished = false;\n    }\n\n    public setCoords(coords: { y: number[], z: number[] }): void {\n        this.coords = coords;\n    }\n\n    public getNextFrame(): { y: number, z: number } {\n        const results = { y: this.coords.y[this.currentFrame], z: this.coords.z[this.currentFrame] };\n        this.currentFrame++;\n        if (this.currentFrame > (this.coords.y.length - 1)) {\n            this.animationFinished = true;\n            this.finalY = this.coords.y[this.currentFrame-1];\n            this.finalZ = this.coords.z[this.currentFrame-1];\n            AnimationFunctions.currentAnimation = undefined;\n        }\n        return results;\n    }\n\n\n}\n\nexport default MonkeyAnimation;","import AnimationFunctions from \"./AnimationFunctions\";\n\n\nclass MonkeyTopRightAnimation {\n\n    private initialX: number;\n    private initialY: number;\n    private initialZ: number;\n    private finalZ!: number;\n    private finalY!: number;\n    private finalX!: number;\n    private currentFrame: number;\n    private coordsArray!: { y: number[], z: number[] };\n    public animationFinished: boolean;\n\n    constructor(initialX: number, initialY: number, initialZ: number) {\n        this.initialX = initialX;\n        this.initialY = initialY;\n        this.initialZ = initialZ;\n        this.currentFrame = 0;\n        this.animationFinished = false;\n    }\n\n    public setCoords(coords: { y:number[], z: number[]}) : void{\n        this.coordsArray = coords;\n    }\n\n    public getNextFrame(onEndCb: () => void): { y: number, z: number } {\n        const results = { y: this.coordsArray.y[this.currentFrame], z: this.coordsArray.z[this.currentFrame] };\n        this.currentFrame++;\n        if (this.currentFrame > (this.coordsArray.y.length - 1)) {\n            this.animationFinished = true;\n            this.finalY = this.coordsArray.y[this.currentFrame-1];\n            this.finalZ = this.coordsArray.z[this.currentFrame-1];\n            AnimationFunctions.currentAnimation = undefined;\n            onEndCb();\n        }\n        return results;\n    }\n}\n\nexport default MonkeyTopRightAnimation;","import MonkeyAnimation from './MonkeyInitialAnimation';\nimport MonkeyTopRightAnimation from './MonkeyTopRightAnimation';\n\nclass AnimationFunctions {\n\n    private static monkeyAnimation: MonkeyAnimation;\n    private static monkeyTopRightAnimation: MonkeyTopRightAnimation;\n    public static currentAnimation: MonkeyAnimation | MonkeyTopRightAnimation | undefined;\n\n    public static instantiateMonkeyAnimation(): MonkeyAnimation {\n        if (!this.monkeyAnimation) {\n            this.monkeyAnimation = new MonkeyAnimation();\n        }\n        this.monkeyAnimation.setCoords(\n            this.moveInFromBack(\n                this.monkeyAnimation.initialY, this.monkeyAnimation.initialZ,\n                0.2, 100,\n            )\n        );\n        this.currentAnimation = this.monkeyAnimation;\n        return this.monkeyAnimation;\n    }\n\n    public static instantiateMonkeyTopRightAnimation(initialX: number, initialY: number, initialZ: number): MonkeyTopRightAnimation {\n        if (!this.monkeyTopRightAnimation) {\n            this.monkeyTopRightAnimation = new MonkeyTopRightAnimation(initialX, initialY, initialZ);\n        }\n        this.monkeyTopRightAnimation.setCoords(\n            this.goToTopAndBack(initialZ, initialY, 0.04, 100)\n        );\n        this.currentAnimation = this.monkeyTopRightAnimation;\n        return this.monkeyTopRightAnimation;\n    }\n\n    private static moveInFromBack(\n        initialY: number, initialZ: number,\n        zIncrement: number,\n        length: number\n    ): { y: number[], z: number[] } {\n        const y = [initialY];\n        const z = [initialZ];\n        for (let i = 0; i < length; i++) {\n            z[i + 1] = z[i] + zIncrement;\n            y[i + 1] = this.parabolicFunc(\n                z[i + 1] + Math.abs(initialZ), initialY,\n                1.55, .07\n            )\n        }\n        return { y, z };\n    }\n\n    private static parabolicFunc(x: number, yStart: number, p1: number, p2: number): number {\n        return (p1 * x - p2 * x ** 2) + yStart;\n    }\n\n    private static goToTopAndBack(\n        initialZ: number,\n        initialY: number,\n        zIncrement: number,\n        length: number\n    ): { y: number[], z: number[] } {\n        const y = [initialY];\n        const z = [initialZ];\n        for (let i = 0; i < length; i++) {\n            z[i + 1] = z[i] + zIncrement;\n            y[i + 1] = this.flattenFunc(z[i + 1], -3, -1) + 4;\n        }\n        return { y, z };\n    }\n\n    private static flattenFunc(x: number, p1: number, p2: number): number {\n        return (p1 * Math.exp(p2 * x));\n    }\n}\n\nexport default AnimationFunctions;","import Main from './Main';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three/build/three.module';\nimport Animations from './animations/monkey/AnimationFunctions';\nimport MonkeyAnimation from './animations/monkey/MonkeyInitialAnimation';\nimport MonkeyTopRightAnimation from './animations/monkey/MonkeyTopRightAnimation';\n\nclass Monkey {\n\n    private main: Main;\n    public monkey!: THREE.Mesh;\n    private monkeyLoaded: boolean;\n    private monkeyAnimation!: MonkeyAnimation;\n    private raycaster!: THREE.Raycaster;\n    private intersects: THREE.Intersection[];\n    private pickableObjects!: THREE.Mesh[];\n    private onClickEventListenerRef!: (e: MouseEvent) => void;\n\n    constructor(main: Main) {\n        this.main = main;\n        this.monkeyLoaded = false;\n        this.intersects = new Array();\n    }\n\n    private createRaycaster(): void {\n        this.raycaster = new THREE.Raycaster();\n    }\n\n\n    private loadMonkey(): void {\n        const loader = new MTLLoader();\n        loader.load(\n            'three-assets/monkey.mtl',\n            (materials) => {\n                materials.preload();\n\n                const objLoader: OBJLoader = new OBJLoader();\n                objLoader.setMaterials(materials);\n                objLoader.load(\n                    'three-assets/monkey.obj',\n                    (object) => {\n                        object.traverse((child) => {\n                            if ((child as THREE.Mesh).isMesh) {\n                                this.setMonkey(child as THREE.Mesh);\n                                const mesh = child as THREE.Mesh;\n                                (mesh.material as THREE.MeshPhongMaterial).color.setHex(0xFFFFFF);\n                            }\n                        })\n                        this.main.scene.add(object);\n                    },\n                    (xhr) => {\n                        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n                    },\n                    (error) => {\n                        console.log('An error happened');\n                    }\n                );\n            },\n            (xhr) => {\n                console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n            },\n            (error) => {\n                console.log('An error happened');\n            }\n        );\n    }\n\n    private setMonkey(monkey: THREE.Mesh) {\n        this.monkey = monkey;\n        this.monkeyLoaded = true;\n        this.monkeyConfig();\n    }\n\n    private onMouseMove(e: MouseEvent): void {\n        if (this.monkeyLoaded) {\n            const x = (e.clientX / this.main.renderer.domElement.clientWidth) * 2 - 1;\n            const y = -(e.clientY / this.main.renderer.domElement.clientHeight) * 2 + 1;\n            this.monkey.rotation.x = -y + .7 < 1 ?  -y + .7 : 1;\n            this.monkey.rotation.y = x;\n\n            this.raycaster.setFromCamera({\n                x: x,\n                y: y\n            }, this.main.camera);\n            this.intersects = this.raycaster.intersectObjects(this.pickableObjects, false);\n\n            if (this.intersects.length > 0) {\n                document.getElementsByTagName(\"body\")[0].style.cursor = \"pointer\";\n            } else {\n                document.getElementsByTagName(\"body\")[0].style.cursor = \"initial\";\n            }\n        }\n    }\n\n    private onClick(e: MouseEvent) {\n        if (this.intersects.length > 0 && !Animations.currentAnimation) {\n            Animations.instantiateMonkeyTopRightAnimation(0, this.monkeyAnimation.finalY, this.monkeyAnimation.finalZ);\n            this.main.sidersInstance.sidersAnimation.shouldAnimate = true;\n        }\n    }\n\n    private monkeyConfig(): void {\n        this.monkeyAnimation = Animations.instantiateMonkeyAnimation();\n        // this.monkey.position.x = 2;\n        this.monkey.position.y = this.monkeyAnimation.initialY;\n        this.monkey.position.z = this.monkeyAnimation.initialZ;\n        this.pickableObjects = [this.monkey];\n        this.main.lightsInstance.monkeyLight.target = this.monkey;\n    }\n\n    private removeOnClickListener(): void {\n        document.removeEventListener('click', this.onClickEventListenerRef);\n    }\n\n    public animateMonkey(): void {\n        if (this.monkeyLoaded) {\n            if (Animations.currentAnimation instanceof MonkeyAnimation) {\n                const currentCoords: { y: number, z: number } = Animations.currentAnimation.getNextFrame();\n                this.monkey.position.y = currentCoords.y;\n                this.monkey.position.z = currentCoords.z;\n            } else if ((Animations.currentAnimation instanceof MonkeyTopRightAnimation)) {\n                const currentCoords: { y: number, z: number } = Animations.currentAnimation.getNextFrame(this.removeOnClickListener.bind(this));\n                this.monkey.position.y = currentCoords.y;\n                this.monkey.position.z = -currentCoords.z;\n                // this.main.lightsInstance.monkeyLight.target = this.monkey;\n            }\n        }\n    }\n\n    public init(): void {\n        this.loadMonkey();\n        this.createRaycaster();\n        this.onClickEventListenerRef = this.onClick.bind(this);\n        document.addEventListener(\"mousemove\", this.onMouseMove.bind(this));\n        document.addEventListener(\"click\", this.onClickEventListenerRef);\n    }\n\n}\n\nexport default Monkey;","import AnimationFunctions from \"./AnimationFunctions\";\n\nclass MovingBackAnimation extends AnimationFunctions {\n\n    private initialX: number;\n    private initialY: number;\n    private initialZ: number;\n    private finalZ!: number;\n    private finalY!: number;\n    private finalX!: number;\n    public coordsArray!: { x: number[], y: number[], z: number[] };\n    private currentFrame: number;\n    public animationFinished: boolean;\n    public shouldAnimate: boolean;\n\n    constructor(initialX: number, initialY: number, initialZ: number) {\n        super()\n        this.initialX = initialX;\n        this.initialY = initialY;\n        this.initialZ = initialZ;\n        this.currentFrame = 0;\n        this.animationFinished = false;\n        this.shouldAnimate = false;\n        this.setCoords();\n    }\n\n    private setCoords(): void {\n        const coords = MovingBackAnimation.goToBack(this.initialX, this.initialY, this.initialZ, 0.037, 0.037825, 100);\n        this.coordsArray = coords;\n    }\n\n    public getNextFrame(): {x: number, y: number, z: number } {\n        const results = { \n            x: this.coordsArray.x[this.currentFrame],\n            y: this.coordsArray.y[this.currentFrame], \n            z: this.coordsArray.z[this.currentFrame] \n        };\n        this.currentFrame++;\n        if (this.currentFrame > (this.coordsArray.y.length - 1)) {\n            this.animationFinished = true;\n            this.shouldAnimate = false;\n            this.finalX = this.coordsArray.x[this.currentFrame - 1];\n            this.finalY = this.coordsArray.y[this.currentFrame - 1];\n            this.finalZ = this.coordsArray.z[this.currentFrame - 1];\n        }\n        return results;\n    }\n\n\n}\n\nexport default MovingBackAnimation;","\nclass AnimationFunctions {\n\n    protected static goToBack(\n        initialX: number,\n        initialY: number,\n        initialZ: number,\n        yIncrement: number,\n        zIncrement: number,\n        length: number\n    ): { x: number[], y: number[], z: number[] } {\n        const x = [initialX];\n        const y = [initialY];\n        const z = [initialZ];\n        for (let i = 0; i < length; i++) {\n            y[i + 1] = y[i] + yIncrement;\n            z[i + 1] = z[i] + zIncrement;\n            x[i + 1] = this.flattenFunc(z[i + 1], 0.07, 1) -3.075;\n        }\n        return { x, y, z };\n    }\n\n    private static flattenFunc(x: number, p1: number, p2: number): number {\n        return (p1 * Math.exp(p2 * x));\n    }\n}\n\n\nexport default AnimationFunctions;","import * as THREE from 'three/build/three.module';\nimport Main from './Main';\nimport SidersAnimation from './animations/siders/MovingBackAnimation';\nclass Siders {\n\n    private main: Main;\n    private leftKnot!: THREE.Mesh;\n    private rightKnot!: THREE.Mesh;\n    private material!: THREE.MeshNormalMaterial;\n    private leftKnotProps: { radius: number, tube: number, tubularSegments: number, radialSegments: number, p: number, q: number };\n    private rightKnotProps: { radius: number, tube: number, tubularSegments: number, radialSegments: number, p: number, q: number };\n    private lastUpdateTime: number;\n    private radiusCurrValue: number;\n    public sidersAnimation!: SidersAnimation;\n\n    constructor(main: Main) {\n        this.main = main;\n        this.leftKnotProps = { radius: 0.3, tube: 0.1, tubularSegments: 20, radialSegments: 20, p: 10, q: 20 };\n        this.rightKnotProps = { radius: 0.3, tube: 0.1, tubularSegments: 20, radialSegments: 20, p: 10, q: 20 };\n        this.lastUpdateTime = new Date().getTime();\n        this.radiusCurrValue = 1;\n    }\n\n    \n    private createMaterial(): void {\n        this.material = new THREE.MeshNormalMaterial();\n    }\n\n    private regenerateKnotGeometries(): void {\n        // LEFT\n        const newLeftGeometry = new THREE.TorusKnotGeometry(\n            this.leftKnotProps.radius, this.leftKnotProps.tube, this.leftKnotProps.tubularSegments, this.leftKnotProps.radialSegments, this.leftKnotProps.p, this.leftKnotProps.q\n        );\n        this.leftKnot.geometry.dispose();\n        this.leftKnot.geometry = newLeftGeometry;\n        // RIGHT\n        const newRightGeometry = new THREE.TorusKnotGeometry(\n            this.rightKnotProps.radius, this.rightKnotProps.tube, this.rightKnotProps.tubularSegments, this.rightKnotProps.radialSegments, this.rightKnotProps.p, this.rightKnotProps.q\n        );\n        this.rightKnot.geometry.dispose();\n        this.rightKnot.geometry = newRightGeometry;\n    }\n\n    private createLeftKnot(): void {\n        const geometry = new THREE.TorusKnotGeometry(this.leftKnotProps.radius, this.leftKnotProps.tube, this.leftKnotProps.tubularSegments, this.leftKnotProps.radialSegments, this.leftKnotProps.p, this.leftKnotProps.q);\n        this.leftKnot = new THREE.Mesh(geometry, this.material);\n        this.leftKnot.position.x = -3;\n        this.leftKnot.position.y = 2;\n        this.main.scene.add(this.leftKnot);\n    }\n\n    private createRightKnot(): void {\n        const geometry = new THREE.TorusKnotGeometry(this.rightKnotProps.radius, this.rightKnotProps.tube, this.rightKnotProps.tubularSegments, this.rightKnotProps.radialSegments, this.rightKnotProps.p, this.rightKnotProps.q);\n        this.rightKnot = new THREE.Mesh(geometry, this.material);\n        this.rightKnot.position.x = 3;\n        this.rightKnot.position.y = 2;\n        this.main.scene.add(this.rightKnot);\n    }\n\n    private waveFunction(start: number, range: number, step: number): number {\n        const curr = this.radiusCurrValue;\n        const p1 = curr % ((range - step) * 2);\n        const p2 = curr % (range - step);\n        this.radiusCurrValue = step + (this.radiusCurrValue % ((range-step) * 2));\n        if (p1 === p2) {\n            return p1 + start;\n        }\n        return p1 - p2 * 2 + start;\n    }\n\n    public updateKnots(): void {\n        if (new Date().getTime() - this.lastUpdateTime > 1) {\n            // this.leftKnotProps.radius = this.waveFunction(.2, .5, .1);\n            // console.log(this.leftKnotProps.radius, 'Siders.tsx', 'line: ', '64');\n            this.leftKnotProps.p = 1 + (this.leftKnotProps.p % 20);\n            this.rightKnotProps.p = 1 + (this.rightKnotProps.p % 20);\n            this.regenerateKnotGeometries();\n            this.lastUpdateTime = new Date().getTime();\n        }\n\n        // this.rotateKnots();\n    }\n\n    instantiateMovingBackAnimation(): void {\n        this.sidersAnimation = new SidersAnimation(this.leftKnot.position.x, this.leftKnot.position.y, this.leftKnot.position.z);\n    }\n\n    public animateKnots(): void {\n        if (this.sidersAnimation.shouldAnimate) {\n            const coords = this.sidersAnimation.getNextFrame();\n            this.leftKnot.position.x = coords.x;\n            this.leftKnot.position.y = coords.y;\n            this.leftKnot.position.z = -coords.z;\n\n            this.rightKnot.position.x = -coords.x;\n            this.rightKnot.position.y = coords.y;\n            this.rightKnot.position.z = -coords.z;\n        }\n    }\n\n\n    public init(): void {\n        this.createMaterial();\n        this.createLeftKnot();\n        this.createRightKnot();\n        this.instantiateMovingBackAnimation();\n    }\n\n}\n\nexport default Siders;","import * as THREE from 'three/build/three.module';\nimport Stats from 'three/examples/jsm/libs/stats.module'\nimport Lights from './Lights';\nimport Monkey from './Monkey';\nimport Siders from './Siders';\n\nclass Main {\n\n    public canvas: HTMLCanvasElement;\n    public renderer!: THREE.WebGLRenderer;\n    public camera!: THREE.PerspectiveCamera;\n    public scene!: THREE.Scene;\n    public stats!: Stats;\n    public monkeyInstance!: Monkey;\n    public lightsInstance!: Lights;\n    public sidersInstance!: Siders;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n    }\n\n    private createScene(): void {\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(\"black\");\n    }\n\n    private createCamera(): void {\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, .1, 1000);\n        this.camera.position.z = 5;\n    }\n\n    private createRenderer(): void {\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas });\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    private createStats(): void {\n        this.stats = Stats();\n        document.body.appendChild(this.stats.dom)\n    }\n\n    private createMonkeyInstance(): void {\n        this.monkeyInstance = new Monkey(this);\n        this.monkeyInstance.init();\n    }\n\n    private createLightsInstance(): void {\n        this.lightsInstance = new Lights(this);\n        this.lightsInstance.init();\n    }\n\n    private createSidersInstance(): void {\n        this.sidersInstance = new Siders(this);\n        this.sidersInstance.init();\n    }\n\n    private onWindowResize(): void {\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.render();\n    }\n\n    private animationLoop() {\n        requestAnimationFrame(this.animationLoop.bind(this));\n        this.lightsInstance.updateHelpers();\n        this.sidersInstance.updateKnots();\n        this.lightsInstance.changeLightColours();\n        this.monkeyInstance.animateMonkey();\n        this.sidersInstance.animateKnots();\n        this.renderer.render(this.scene, this.camera);\n        this.stats.update();\n    }\n\n    public init(): void {\n        this.createRenderer();\n        this.createCamera();\n        this.createScene();\n        this.createStats();\n\n        this.createMonkeyInstance();\n        this.createLightsInstance();\n        this.createSidersInstance();\n\n        window.addEventListener('resize', this.onWindowResize.bind(this), false);\n        this.animationLoop();\n    }\n\n    private render(): void {\n        this.renderer.render(this.scene, this.camera);\n    }\n\n}\n\nexport default Main;","import { createRef, useEffect, useState } from 'react';\nimport './ThreeD.css';\nimport Main from '../../threeD/Main';\n\nconst ThreeD = () => {\n    const [webGLMainInstance, setWebGLMainInstance] = useState<Main>();\n    const canvasRef = createRef<HTMLCanvasElement>();\n  \n    useEffect(() => {\n      if (canvasRef && canvasRef.current) {\n        const webGLMainInstance: Main = new Main(canvasRef.current);\n        setWebGLMainInstance(webGLMainInstance);\n        webGLMainInstance.init();\n      }\n  \n    }, []);\n  \n    return (\n      <canvas ref={canvasRef} className=\"canvas\"></canvas>\n    );\n};\n\nexport default ThreeD;","import './PrimaryHeading.css';\n\nconst PrimaryHeading = ({ content }: { content: string}) => {\n\n    return (\n        <span className=\"primary-heading\">\n            {content}\n        </span>\n    );\n};\n\nexport default PrimaryHeading;","import './SecondaryHeading.css';\n\nconst SecondaryHeading = ({ content }: { content: string}) => {\n\n    return (\n        <span className=\"secondary-heading\">\n            {content}\n        </span>\n    );\n};\n\nexport default SecondaryHeading;","import './LandingPage.css';\nimport ThreeD from '../../components/ThreeD/ThreeD';\nimport PrimaryHeading from '../../components/Headings/PrimaryHeading/PrimaryHeading';\nimport SecondaryHeading from '../../components/Headings/SecondaryHeading/SecondaryHeading';\n\nconst LandingPage = () => {\n\n    return (\n        <main className=\"landing-page-main\">\n            <div className=\"canvas-container-landing-page\">\n                <ThreeD />\n            </div>\n            <div className=\"landing-page-title\">\n                <PrimaryHeading content=\"Welcome to my\" />\n            </div>\n            <div className=\"landing-page-subtitle\">\n                <SecondaryHeading content=\"Personal space\" />\n            </div>\n        </main>\n    );\n};\n\nexport default LandingPage;","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom/cjs/react-router-dom';\nimport LandingPage from './containers/LandingPage/LandingPage';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          {LandingPage}\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport visitorTracker from './utils/visitor-tracker';\n// visitorTracker();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}